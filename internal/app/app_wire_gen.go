// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"yafgo/yafgo-layout/internal/g"
	"yafgo/yafgo-layout/internal/handler"
	"yafgo/yafgo-layout/internal/play"
	"yafgo/yafgo-layout/internal/repository"
	"yafgo/yafgo-layout/internal/server"
	"yafgo/yafgo-layout/internal/service"
	"yafgo/yafgo-layout/pkg/notify"
)

// Injectors from app_wire.go:

func newApp(envConf string) (*application, error) {
	config := NewYCfg(envConf)
	logger := NewYLog(config)
	globalObj := g.New(config)
	jwtUtil := NewJwt(config)
	db := NewDB(config, logger)
	client := NewRedis(config)
	query := NewGormQuery(db)
	serviceService := service.NewService(logger, jwtUtil, db, client, query)
	repositoryRepository := repository.NewRepository(db, client, query, logger)
	userRepository := repository.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(serviceService, userRepository)
	handlerHandler := handler.NewHandler(logger, globalObj, jwtUtil, userService)
	webService := server.NewWebService(logger, config, globalObj, handlerHandler)
	feishuRobot := notify.NewFeishu(logger, config)
	playground := play.NewPlayground(db, client, query, logger, feishuRobot)
	appApplication := newApplication(logger, config, webService, playground)
	return appApplication, nil
}

// app_wire.go:

var playgroundSet = wire.NewSet(play.NewPlayground)

var handlerSet = wire.NewSet(handler.NewHandler)

var serviceSet = wire.NewSet(service.NewService, service.NewUserService)

var repositorySet = wire.NewSet(
	NewRedis,
	NewCache,
	NewDB,
	NewGormQuery, repository.NewRepository, repository.NewUserRepository,
)

var notifySet = wire.NewSet(notify.NewFeishu)

var gSet = wire.NewSet(g.New)

var jwtSet = wire.NewSet(NewJwt)

var yCfgSet = wire.NewSet(NewYCfg)

var yLogSet = wire.NewSet(NewYLog)
