// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"yafgo/yafgo-layout/internal/handler"
	"yafgo/yafgo-layout/internal/repository"
	"yafgo/yafgo-layout/internal/server"
	"yafgo/yafgo-layout/internal/service"
)

// Injectors from app_wire.go:

func newApp(envConf string) (*application, func(), error) {
	config := NewYCfg(envConf)
	logger := NewYLog(config)
	handlerHandler := handler.NewHandler(logger)
	serviceService := service.NewService(logger)
	db := newDB(config, logger)
	client := newRedis(config)
	query := newGormQuery(db)
	repositoryRepository := repository.NewRepository(db, client, query, logger)
	userRepository := repository.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(serviceService, userRepository)
	userHandler := handler.NewUserHandler(handlerHandler, userService)
	webService := server.NewWebService(logger, config, userHandler)
	appApplication := newApplication(logger, config, webService)
	return appApplication, func() {
	}, nil
}

// app_wire.go:

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewUserHandler)

var serviceSet = wire.NewSet(service.NewService, service.NewUserService)

var repositorySet = wire.NewSet(
	newRedis,
	newCache,
	newDB,
	newGormQuery, repository.NewRepository, repository.NewUserRepository,
)

var yCfgSet = wire.NewSet(NewYCfg)

var yLogSet = wire.NewSet(NewYLog)
