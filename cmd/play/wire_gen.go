// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"path/filepath"
	"yafgo/yafgo-layout/internal/app"
	"yafgo/yafgo-layout/internal/play"
	"yafgo/yafgo-layout/pkg/notify"
	"yafgo/yafgo-layout/pkg/sys/ycfg"
)

// Injectors from wire.go:

func newPlay(envConf string) *play.Playground {
	config := newYCfg(envConf)
	logger := app.NewYLog(config)
	db := app.NewDB(config, logger)
	client := app.NewRedis(config)
	query := app.NewGormQuery(db)
	feishuRobot := notify.NewFeishu(logger, config)
	playground := play.NewPlayground(db, client, query, logger, feishuRobot)
	return playground
}

// wire.go:

var playgroundSet = wire.NewSet(play.NewPlayground)

var notifySet = wire.NewSet(notify.NewFeishu)

var dbSet = wire.NewSet(app.NewRedis, app.NewCache, app.NewDB, app.NewGormQuery)

var yLogSet = wire.NewSet(app.NewYLog)

var yCfgSet = wire.NewSet(newYCfg)

func newYCfg(envConf string) (cfg *ycfg.Config) {
	cfg = ycfg.New(envConf, ycfg.WithType("yaml"), ycfg.WithEnvPrefix("YAFGO"), ycfg.WithDir(filepath.Join("../../")), ycfg.WithDir(filepath.Join("../../config/")))
	return
}
